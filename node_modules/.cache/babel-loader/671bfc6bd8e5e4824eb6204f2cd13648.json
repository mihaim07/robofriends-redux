{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\Web\\\\robofriends-redux\\\\robofriends\\\\src\\\\containers\\\\App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\nimport { setSearchField, requestRobots } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  };\n};\n\nclass App extends Component {\n  // constructor() {\n  //   super()\n  //   this.state = {\n  //     robots: [],\n  //     // searchfield: ''\n  //   }\n  // }\n  componentDidMount() {\n    this.props.onRequestRobots();\n  } //   fetch('https://jsonplaceholder.typicode.com/users')\n  //     .then(response=> response.json())\n  //     .then(users => {this.setState({ robots: users})});\n  // }\n  // onSearchChange = (event) => {\n  //   this.setState({ searchfield: event.target.value })\n  // }\n\n\n  render() {\n    // const { robots } = this.state; //{ robots, searchfield }\n    const {\n      searchField,\n      onSearchChange,\n      robots,\n      isPending\n    } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return isPending ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"f1\",\n        children: \"RoboFriends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchChange: onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n        children: /*#__PURE__*/_jsxDEV(CardList, {\n          robots: filteredRobots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Work/Web/robofriends-redux/robofriends/src/containers/App.js"],"names":["React","Component","connect","CardList","SearchBox","Scroll","setSearchField","requestRobots","mapStateToProps","state","searchField","searchRobots","robots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","componentDidMount","props","render","filteredRobots","filter","robot","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,WAAP;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,YAA9C;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAD3B;AAELE,IAAAA,MAAM,EAAEH,KAAK,CAACF,aAAN,CAAoBK,MAFvB;AAGLC,IAAAA,SAAS,EAAEJ,KAAK,CAACF,aAAN,CAAoBM,SAH1B;AAILC,IAAAA,KAAK,EAAEL,KAAK,CAACF,aAAN,CAAoBO;AAJtB,GAAP;AAMD,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACV,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAD9B;AAELC,IAAAA,eAAe,EAAE,MAAML,QAAQ,CAACT,aAAa,EAAd;AAF1B,GAAP;AAID,CALD;;AAOA,MAAMe,GAAN,SAAkBrB,SAAlB,CAA4B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AAEAsB,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWH,eAAX;AACD,GAXyB,CAY1B;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEAI,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEf,MAAAA,WAAF;AAAeO,MAAAA,cAAf;AAA+BL,MAAAA,MAA/B;AAAuCC,MAAAA;AAAvC,QAAqD,KAAKW,KAAhE;AACA,UAAME,cAAc,GAAGd,MAAM,CAACe,MAAP,CAAcC,KAAK,IAAG;AAC3C,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCrB,WAAW,CAACoB,WAAZ,EAAlC,CAAP;AACD,KAFsB,CAAvB;AAGA,WAAOjB,SAAS,gBACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADc,gBAGZ;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,YAAY,EAAEI;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,MAAM,EAAES;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAWD;;AAtCyB;;AAyC5B,eAAexB,OAAO,CAACM,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\nimport { setSearchField, requestRobots } from '../actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchField: state.searchRobots.searchField,\r\n    robots: state.requestRobots.robots,\r\n    isPending: state.requestRobots.isPending,\r\n    error: state.requestRobots.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n    onRequestRobots: () => dispatch(requestRobots()) \r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  // constructor() {\r\n  //   super()\r\n  //   this.state = {\r\n  //     robots: [],\r\n  //     // searchfield: ''\r\n  //   }\r\n  // }\r\n\r\n  componentDidMount() {\r\n    this.props.onRequestRobots()\r\n  }\r\n  //   fetch('https://jsonplaceholder.typicode.com/users')\r\n  //     .then(response=> response.json())\r\n  //     .then(users => {this.setState({ robots: users})});\r\n  // }\r\n\r\n  // onSearchChange = (event) => {\r\n  //   this.setState({ searchfield: event.target.value })\r\n  // }\r\n\r\n  render() {\r\n    // const { robots } = this.state; //{ robots, searchfield }\r\n    const { searchField, onSearchChange, robots, isPending } = this.props;\r\n    const filteredRobots = robots.filter(robot =>{\r\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    })\r\n    return isPending ?\r\n      <h1>Loading</h1> :\r\n      (\r\n        <div className='tc'>\r\n          <h1 className='f1'>RoboFriends</h1>\r\n          <SearchBox searchChange={onSearchChange}/>\r\n          <Scroll>\r\n            <CardList robots={filteredRobots} />\r\n          </Scroll>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}